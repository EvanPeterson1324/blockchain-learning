/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Firework,
  FireworkInterface,
} from "../../../../contracts/solidity/interface-as-param/Firework";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "isLoud",
        type: "bool",
      },
    ],
    name: "makeSound",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506102358061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fd034a114610030575b600080fd5b61004a60048036038101906100459190610120565b610060565b60405161005791906101dd565b60405180910390f35b606081156100a5576040518060400160405280600581526020017f424f4f4d2100000000000000000000000000000000000000000000000000000081525090506100de565b6040518060400160405280600581526020017f626f6f6d2e00000000000000000000000000000000000000000000000000000081525090505b919050565b600080fd5b60008115159050919050565b6100fd816100e8565b811461010857600080fd5b50565b60008135905061011a816100f4565b92915050565b600060208284031215610136576101356100e3565b5b60006101448482850161010b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561018757808201518184015260208101905061016c565b60008484015250505050565b6000601f19601f8301169050919050565b60006101af8261014d565b6101b98185610158565b93506101c9818560208601610169565b6101d281610193565b840191505092915050565b600060208201905081810360008301526101f781846101a4565b90509291505056fea2646970667358221220918d8e02fb9b077d0eee88312a4aa135f3261a5805bfd8686526e465a9a6f21c64736f6c634300081c0033";

type FireworkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FireworkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Firework__factory extends ContractFactory {
  constructor(...args: FireworkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Firework & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Firework__factory {
    return super.connect(runner) as Firework__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FireworkInterface {
    return new Interface(_abi) as FireworkInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Firework {
    return new Contract(address, _abi, runner) as unknown as Firework;
  }
}
