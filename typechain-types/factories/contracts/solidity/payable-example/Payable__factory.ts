/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../../common";
import type {
  Payable,
  PayableInterface,
} from "../../../../contracts/solidity/payable-example/Payable";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "notPayable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103f7806100536000396000f3fe60806040526004361061004a5760003560e01c8063273884bd1461004f578063853828b6146100665780638da5cb5b1461007d578063a9059cbb146100a8578063d0e30db0146100d1575b600080fd5b34801561005b57600080fd5b506100646100db565b005b34801561007257600080fd5b5061007b6100dd565b005b34801561008957600080fd5b506100926101aa565b60405161009f91906102b9565b60405180910390f35b3480156100b457600080fd5b506100cf60048036038101906100ca919061033b565b6101ce565b005b6100d9610276565b005b565b600047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610129906103ac565b60006040518083038185875af1925050503d8060008114610166576040519150601f19603f3d011682016040523d82523d6000602084013e61016b565b606091505b50509050806101a6576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516101f4906103ac565b60006040518083038185875af1925050503d8060008114610231576040519150601f19603f3d011682016040523d82523d6000602084013e610236565b606091505b5050905080610271576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a382610278565b9050919050565b6102b381610298565b82525050565b60006020820190506102ce60008301846102aa565b92915050565b600080fd5b6102e281610298565b81146102ed57600080fd5b50565b6000813590506102ff816102d9565b92915050565b6000819050919050565b61031881610305565b811461032357600080fd5b50565b6000813590506103358161030f565b92915050565b60008060408385031215610352576103516102d4565b5b6000610360858286016102f0565b925050602061037185828601610326565b9150509250929050565b600081905092915050565b50565b600061039660008361037b565b91506103a182610386565b600082019050919050565b60006103b782610389565b915081905091905056fea2646970667358221220d6a6b77a1595238fe03aca3efc5a09b41d9b7726f2af2954c9da3a9ced357b7d64736f6c634300081c0033";

type PayableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payable__factory extends ContractFactory {
  constructor(...args: PayableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Payable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Payable__factory {
    return super.connect(runner) as Payable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayableInterface {
    return new Interface(_abi) as PayableInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Payable {
    return new Contract(address, _abi, runner) as unknown as Payable;
  }
}
